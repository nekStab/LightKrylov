name: codecov

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            toolchain: {compiler: gcc, version: 14, flags: ['-coverage']}

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      
      - uses: fortran-lang/setup-fortran@main
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}

      - name: Setup Fortran Package Manager
        uses: fortran-lang/setup-fpm@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare for code coverage
        if: contains( matrix.os, 'ubuntu')
        run: |
          sudo apt-get install lcov
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc-14 gfortran-14
          sudo update-alternatives \
             --install /usr/bin/gcc gcc /usr/bin/gcc-14 100 \
             --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-14 \
             --slave /usr/bin/gcov gcov /usr/bin/gcov-14

      - name: Run tests
        run: |
          fpm test --profile debug --flag "${{ join(matrix.toolchain.flags, ' ') }}"

      - name: Run examples
        run: |
          fpm run --profile debug --flag "${{ join(matrix.toolchain.flags, ' ') }}" --example Roessler
          fpm run --profile debug --flag "${{ join(matrix.toolchain.flags, ' ') }}" --example Ginzburg-Landau

      - name: Create coverage report
        run: |
          mkdir -p ${{ env.COV_DIR }}
          mv ./build/gfortran_*/*/* ${{ env.COV_DIR }}
          lcov --capture --initial --base-directory . --directory ${{ env.COV_DIR }} --output-file ${{ env.COV_DIR }}/coverage.base
          lcov --capture           --base-directory . --directory ${{ env.COV_DIR }} --output-file ${{ env.COV_DIR }}/coverage.capture
          lcov --add-tracefile ${{ env.COV_DIR }}/coverage.base --add-tracefile ${{ env.COV_DIR }}/coverage.capture --output-file ${{ env.COV_DIR }}/coverage.info
        env:
            COV_DIR: build/coverage

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/coverage/coverage.info
